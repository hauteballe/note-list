{"version":3,"sources":["config/constants/index.js","api/base.js","api/auth/index.js","store/features/userSlice.js","store/index.js","theme/index.js","components/PrivateRoute/PrivateRoute.js","components/Header/styled.js","components/Header/Header.jsx","utils/shortify.js","components/NotesList/NotesList.jsx","images/main.png","validations/index.js","api/notes/index.js","components/CreateNoteView/CreateNoteView.jsx","components/DisplayedNoteView/DisplayedNoteView.jsx","components/EditNoteView/EditNoteView.jsx","pages/MyNotes/MyNotes.jsx","pages/SignIn/SignIn.jsx","images/not-found.png","pages/NotFound/NotFound.jsx","pages/About/About.jsx","pages/SignUp/SignUp.jsx","pages/SharedNotes/SharedNotes.jsx","App.js","index.js"],"names":["ROUTES","Date","toDateString","INITIAL_VALUES","email","firstName","lastName","birthday","password","confirmPassword","apiClient","axios","create","baseURL","process","getBasicAuthString","str","window","btoa","unescape","encodeURIComponent","authorizeApiClient","basicAuth","defaults","headers","common","logIn","a","result","ok","get","Authorization","response","data","error","registration","post","getUsersList","authApi","logOut","userSlice","createSlice","name","initialState","reducers","login","state","action","payload","remove","actions","reducer","combineReducers","user","userReducer","persistConfig","key","storage","version","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","getState","theme","createTheme","PrivateRoute","props","children","rest","isContentAvailable","useSelector","Boolean","render","to","HeaderLink","styled","Box","flexGrow","Toolbar","display","justifyContent","Link","textDecoration","StyledLink","justifySelf","alignItems","Typography","color","TabLink","Header","dispatch","useDispatch","AppBar","position","Grid","container","item","variant","component","spacing","IconButton","onClick","ExitToApp","Button","shortify","maxLen","slice","ListNoteItem","note","index","ListItem","disablePadding","sx","borderLeft","ListItemButton","minWidth","title","description","createdAt","NotesList","useState","filterMode","setFilterMode","dateFrom","dateTo","filterData","setFilterData","handleChange","event","target","value","notes","fetchMoreNotes","hasMoreNotes","fetchFilteredNotes","itemProps","filterNotes","resetFilterNotes","fetchMore","height","p","size","width","pt","xs","TextField","id","type","fullWidth","label","InputLabelProps","shrink","onChange","overflow","dataLength","length","next","hasMore","scrollableTarget","List","map","signInValidationSchema","yup","required","signUpValidationSchema","matches","min","oneOf","createNoteFormValidationScema","noteTitle","noteDescription","addNote","getNotesList","page","params","updateNote","uri","put","deleteNote","console","log","delete","getSharedNotesList","shareNote","notesApi","CreateNoteHeader","pb","align","CreateNoteForm","onSubmit","formik","useFormik","initialValues","validationSchema","handleSubmit","marginBottom","values","touched","errors","helperText","multiline","rows","marginRight","CreateNoteView","onNoteAdd","useSnackbar","enqueueSnackbar","closeSnackbar","newData","Math","floor","random","toUTCString","anchorOrigin","vertical","horizontal","backgroundColor","borderRadius","padding","direction","boxShadow","FormDialog","dialogOpen","setDialogOpen","shareNotes","usersData","setUsersData","getUsers","useEffect","selectedEmails","setSelectedEmails","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","Autocomplete","multiple","newValue","options","getOptionLabel","option","renderInput","placeholder","DialogActions","DisplayedNoteView","onEditMode","onDeleteBtnClick","users","emails","px","alignContent","EditNoteHeader","EditNoteForm","EditNoteView","onNoteUpdate","updatedNote","updatedAt","VIEW_TYPE","EmptyView","src","image","alt","MyNotes","setPage","setHasMoreNotes","setNotes","selectedNote","setSelectedNote","viewType","setViewType","loadingNotes","setLoadingNotes","nextPage","concat","getNotesOnPageLoad","pageOne","pageTwo","selectNote","newNotes","newNote","onNoteDelete","noteToDelete","filter","py","LinearProgress","flex","Fab","margin","top","right","bottom","left","SignInHeader","RegisterText","SignInForm","SignIn","history","useHistory","push","Container","maxWidth","disableGutters","NotFound","About","ListItemText","primary","SignUpHeader","SignUpForm","SignUp","SharedNotes","App","loading","ThemeProvider","basename","exact","from","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c961775.chunk.js","sourcesContent":["export const NOTES = [\n  {\n    id: 1,\n    title: \"First note\",\n    description:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum at iaculis nibh. Aliquam erat volutpat. Phasellus lacinia cursus fringilla. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Donec vestibulum enim id justo volutpat, et bibendum augue scelerisque. Sed vestibulum elementum molestie. Mauris eu nisi vitae nibh vulputate sagittis. Quisque et cursus tortor, quis porta ante. Maecenas posuere, lacus ornare consequat elementum, sem turpis ornare justo, eget aliquam ante dolor non quam. Curabitur congue tempor massa eget lacinia. Quisque malesuada nibh nec ipsum consectetur scelerisque. Sed venenatis metus a magna vulputate tincidunt. Integer lacus est, pellentesque sit amet tincidunt at, mattis non libero. Pellentesque euismod quam vitae eros rhoncus, eget luctus augue tempus. Sed id porttitor mauris.\",\n    date: new Date().toDateString(),\n  },\n  {\n    id: 2,\n    title: \"Second note\",\n    description:\n      \"Duis elementum eu libero at fermentum. Aliquam eget diam sollicitudin, mattis eros sed, eleifend ipsum. Nulla dictum erat non nulla congue pellentesque. Nulla et lorem vel urna scelerisque tempor non ultrices leo. Duis elementum ex dictum tellus porttitor, sit amet pharetra risus viverra. Etiam sed quam urna. Vivamus at rutrum lorem, vitae sagittis dui. Donec quis ligula vulputate, euismod mi quis, consequat nibh. Proin scelerisque sapien vitae lorem sodales cursus. Aliquam tristique faucibus odio, vel suscipit nulla dictum sed. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sodales posuere accumsan. Vestibulum vitae rhoncus quam. In hac habitasse platea dictumst. Proin lectus lectus, sodales eget eros a, consequat blandit risus. Nam at neque risus.\",\n    date: new Date().toDateString(),\n  },\n  {\n    id: 3,\n    title: \"Third note\",\n    description:\n      \"Mauris consequat accumsan dictum. Praesent nisi urna, gravida in efficitur id, ultricies id lectus. Integer varius nibh massa, in pretium nisi malesuada facilisis. Nullam eu mauris orci. Ut dapibus, arcu a scelerisque fermentum, diam diam cursus dui, id pharetra arcu purus sit amet sem. Nulla elementum est non leo dapibus iaculis. Integer malesuada tincidunt magna, vel elementum diam laoreet eu. Duis in congue nulla, vel blandit massa. Aenean tempus sapien sollicitudin elit vulputate interdum. Suspendisse et bibendum dolor. Nunc non est sit amet sem euismod blandit sit amet nec ligula.\",\n    date: new Date().toDateString(),\n  },\n  {\n    id: 4,\n    title: \"Fourth note\",\n    description:\n      \"Morbi auctor at orci at venenatis. Vestibulum commodo auctor massa, nec luctus ex rhoncus et. Aenean fringilla, justo nec hendrerit malesuada, tortor lorem pulvinar lectus, sed tristique risus libero non urna. Pellentesque interdum, libero quis convallis egestas, turpis nibh sagittis ex, elementum porta nisl nulla at metus. Sed tristique molestie eros, id scelerisque sem ultricies id. Curabitur elit quam, interdum blandit fringilla a, malesuada vitae ligula. Nunc id convallis tellus. Morbi ligula justo, elementum nec ornare id, auctor sit amet diam. Sed faucibus, tortor quis vulputate vulputate, libero velit iaculis urna, vel consequat lorem augue eget justo.\",\n    date: new Date().toDateString(),\n  },\n  {\n    id: 5,\n    title: \"Fifth note\",\n    description:\n      \"Integer in venenatis sem. Cras varius ligula lacinia libero volutpat fermentum. Vestibulum eget aliquam massa. In ultricies neque urna, id feugiat sapien convallis vitae. Interdum et malesuada fames ac ante ipsum primis in faucibus. Aliquam faucibus ex non accumsan sollicitudin. Donec a viverra massa. Duis pulvinar ultrices fringilla. Etiam eros sapien, vehicula non semper nec, tempus quis elit. Curabitur lobortis mollis sapien a pulvinar. Sed maximus at ligula ut molestie. Duis consectetur auctor tristique.\",\n    date: new Date().toDateString(),\n  },\n];\n\nexport const ROUTES = {\n  baseName: \"/note-list\",\n  myNotes: \"/notes\",\n  sharedNotes: \"/shared-notes\",\n  about: \"/about\",\n  notFound: \"/not-found\",\n  signIn: \"/sign-in\",\n  signUp: \"/sign-up\",\n  authRoute: \"/api/users/auth\",\n  usersRoute: \"/api/users\",\n  notesRoute: \"/api/notes\",\n  sharedNotesRoute: \"/api/notes/share\",\n};\n\nexport const INITIAL_VALUES = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  birthday: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n","import axios from \"axios\";\n\nexport const apiClient = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_HOST,\n});\n","import { ROUTES } from \"config/constants\";\nimport { apiClient } from \"api/base\";\n\nconst utf8_to_b64 = (str) => window.btoa(unescape(encodeURIComponent(str)));\n\nconst getBasicAuthString = ({ email, password }) => {\n  return \"Basic \" + utf8_to_b64(`${email}:${password}`);\n};\n\nconst authorizeApiClient = (basicAuth) => {\n  apiClient.defaults.headers.common[\"Authorization\"] = basicAuth;\n};\n\nconst logIn = async ({ email, password }) => {\n  const result = {\n    ok: true,\n  };\n  try {\n    const basicAuth = getBasicAuthString({ email, password });\n    const response = await apiClient.get(ROUTES.authRoute, {\n      headers: { Authorization: basicAuth },\n    });\n    result.data = response.data;\n    authorizeApiClient(basicAuth);\n  } catch (error) {\n    result.ok = false;\n    result.error = error.response.data;\n  }\n  return result;\n};\n\nconst logOut = () => {\n  delete apiClient.defaults.headers.common[\"Authorization\"];\n};\n\nconst registration = async ({ data }) => {\n  const result = {\n    ok: true,\n  };\n  try {\n    await apiClient.post(ROUTES.usersRoute, data);\n  } catch (error) {\n    result.ok = false;\n    result.error = error;\n  }\n  return result;\n};\n\nconst getUsersList = async () => {\n  const result = {\n    ok: true,\n  };\n  try {\n    const response = await apiClient.get(ROUTES.usersRoute);\n    result.data = response.data;\n  } catch (error) {\n    result.ok = false;\n    result.error = error.response.data;\n  }\n  return result;\n};\n\nconst authApi = {\n  logIn,\n  logOut,\n  registration,\n  getBasicAuthString,\n  authorizeApiClient,\n  getUsersList,\n};\nexport default authApi;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      return { ...action.payload };\n    },\n    remove: () => {\n      return {};\n    },\n  },\n});\n\nexport const actions = userSlice.actions;\nexport default userSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport authApi from \"api/auth\";\nimport userReducer from \"./features/userSlice\";\n\nconst reducer = combineReducers({ user: userReducer });\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  version: 1,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst onRehydrateFinished = () => {\n  const state = store.getState();\n  if (state.user.basicAuth) {\n    authApi.authorizeApiClient(state.user.basicAuth);\n  }\n};\n\nconst persistor = persistStore(store, {}, onRehydrateFinished);\n\nexport { store, persistor };\n","import { createTheme } from \"@mui/material/styles\";\n\nexport const theme = createTheme({});\n","import { ROUTES } from \"config/constants\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = (props) => {\n  const { children, ...rest } = props;\n  const isContentAvailable = useSelector((state) => Boolean(state.user.email));\n\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        isContentAvailable ? children : <Redirect to={ROUTES.signIn} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { Box } from \"@mui/system\";\nimport { Link } from \"react-router-dom\";\nimport { Toolbar, Typography } from \"@mui/material\";\n\nimport styled from \"styled-components\";\n\nexport const HeaderBox = styled(Box)({\n  flexGrow: 1,\n});\n\nexport const HeaderToolbar = styled(Toolbar)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n});\n\nexport const HeaderLink = styled(Link)({\n  textDecoration: \"none\",\n});\n\nexport const ButtonsBox = styled(Box)({\n  display: \"flex\",\n  justifySelf: \"flex-end\",\n  alignItems: \"center\",\n});\n\nexport const HeaderLogo = styled(Typography)({\n  color: \"#90caf9\",\n  display: \"flex\",\n  justifySelf: \"flex-start\",\n});\n\nexport const StyledLink = styled(Link)({\n  color: \"inherit\",\n  textDecoration: \"none\",\n});\n\nexport const TabLink = styled(StyledLink)({\n  \"&:hover\": {\n    color: \"black\",\n  },\n});\n","import {\n  Toolbar,\n  Typography,\n  AppBar,\n  IconButton,\n  Button,\n  Grid,\n} from \"@mui/material\";\nimport { ExitToApp } from \"@mui/icons-material\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport authApi from \"api/auth\";\nimport { ROUTES } from \"config/constants\";\nimport { actions } from \"store/features/userSlice\";\n\nimport { HeaderLink, StyledLink, TabLink } from \"./styled\";\n\nconst Header = (props) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n\n  const onClick = () => {\n    authApi.logOut();\n    dispatch(actions.remove());\n  };\n\n  return (\n    <AppBar position=\"static\" {...props}>\n      <Toolbar>\n        <Grid container justifyContent=\"space-between\">\n          <Grid item>\n            <Typography variant=\"h5\" component={StyledLink} to={ROUTES.myNotes}>\n              Notes app\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Grid container alignItems=\"center\" spacing={2}>\n              <Grid item>\n                <Typography component={TabLink} to={ROUTES.myNotes}>\n                  MY NOTES\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography component={TabLink} to={ROUTES.sharedNotes}>\n                  SHARED NOTES\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography component={TabLink} to={ROUTES.about}>\n                  ABOUT\n                </Typography>\n              </Grid>\n              <Grid item>\n                {user.email ? (\n                  <IconButton color=\"inherit\" onClick={onClick}>\n                    <ExitToApp />\n                  </IconButton>\n                ) : (\n                  <HeaderLink to={ROUTES.signIn}>\n                    <Button variant=\"text\">Sign In</Button>\n                  </HeaderLink>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","const shortify = (str, maxLen = 20) => {\n  return str.slice(0, maxLen);\n};\n\nexport default shortify;\n","import InfiniteScroll from \"react-infinite-scroll-component\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState } from \"react\";\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\nimport { Box, List, Typography, Grid, TextField } from \"@mui/material\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\n\nimport shortify from \"utils/shortify\";\n\nconst ListNoteItem = ({ note, onClick, index }) => {\n  return (\n    <ListItem disablePadding>\n      <Box\n        sx={{\n          borderLeft: \"3px solid #1976d2\",\n        }}\n      >\n        <ListItemButton\n          sx={{ minWidth: \"250px\" }}\n          onClick={() => onClick(note)}\n        >\n          <Box>\n            <Typography variant=\"h5\">{note.title}</Typography>\n            <Typography>{shortify(note.description)}...</Typography>\n            <Typography variant=\"caption\">\n              {new Date(note.createdAt).toDateString()}\n            </Typography>\n          </Box>\n        </ListItemButton>\n      </Box>\n    </ListItem>\n  );\n};\n\nconst NotesList = (props) => {\n  const [filterMode, setFilterMode] = useState(false);\n\n  const initialState = {\n    name: \"\",\n    dateFrom: \"\",\n    dateTo: \"\",\n  };\n\n  const [filterData, setFilterData] = useState(initialState);\n\n  const handleChange = (event) => {\n    setFilterData({ ...filterData, [event.target.name]: event.target.value });\n  };\n\n  const {\n    notes,\n    fetchMoreNotes,\n    hasMoreNotes,\n    fetchFilteredNotes,\n    itemProps = {},\n  } = props;\n\n  const filterNotes = async () => {\n    await fetchFilteredNotes(filterData);\n  };\n\n  const resetFilterNotes = async () => {\n    setFilterData(initialState);\n    await fetchFilteredNotes(initialState);\n  };\n\n  const fetchMore = async () => {\n    await fetchMoreNotes(filterData);\n  };\n\n  return (\n    <Box sx={{ height: \"100%\" }}>\n      <Box p={1}>\n        <Grid container justifyContent=\"flex-start\">\n          <IconButton\n            onClick={() => {\n              setFilterMode(!filterMode);\n            }}\n            size=\"small\"\n            color=\"primary\"\n          >\n            <FilterAltIcon />\n          </IconButton>\n        </Grid>\n        {filterMode && (\n          <Box sx={{ width: \"250px\" }} pt={1}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  name=\"name\"\n                  id=\"outlined-search\"\n                  type=\"search\"\n                  fullWidth\n                  size=\"small\"\n                  label=\"Title\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={filterData.name}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  name=\"dateFrom\"\n                  type=\"date\"\n                  fullWidth\n                  size=\"small\"\n                  label=\"Date From\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  name=\"dateTo\"\n                  type=\"date\"\n                  fullWidth\n                  size=\"small\"\n                  label=\"Date To\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={1} justifyContent=\"space-around\">\n                  <Grid item xs={6}>\n                    <Button\n                      fullWidth\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={filterNotes}\n                    >\n                      Filter\n                    </Button>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Button\n                      fullWidth\n                      size=\"small\"\n                      variant=\"contained\"\n                      onClick={resetFilterNotes}\n                    >\n                      Reset\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n        )}\n      </Box>\n      <Box\n        id=\"scrollableBox\"\n        sx={{\n          minWidth: \"250px\",\n          height: \"calc(100% - 50px)\",\n          overflow: \"auto\",\n          \"&::-webkit-scrollbar\": { display: \"none\" },\n        }}\n      >\n        <InfiniteScroll\n          dataLength={notes.length}\n          next={fetchMore}\n          hasMore={hasMoreNotes}\n          scrollableTarget=\"scrollableBox\"\n        >\n          <List\n            sx={{\n              minWidth: \"250px\",\n            }}\n            disablePadding\n          >\n            {notes.map((note) => (\n              <Box p={1} key={note.id} index={note.index}>\n                <ListNoteItem note={note} {...itemProps} />\n              </Box>\n            ))}\n          </List>\n        </InfiniteScroll>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NotesList;\n","export default __webpack_public_path__ + \"static/media/main.c09cf869.png\";","import * as yup from \"yup\";\n\nexport const signInValidationSchema = yup.object({\n  email: yup\n    .string(\"Enter your email\")\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  password: yup.string(\"Enter your password\").required(\"Password is required\"),\n});\n\nexport const signUpValidationSchema = yup.object({\n  email: yup\n    .string(\"Enter your email\")\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  firstName: yup\n    .string(\"Enter your first name\")\n    .required(\"Password is required\")\n    .matches(\n      /^[A-Z][a-z]+(-[A-Z][a-z]+)*$/,\n      \"Name starts with a capital letter and contains at least 2 letters\"\n    ),\n  lastName: yup\n    .string()\n    .required(\"Enter your surname\")\n    .matches(\n      /^[A-Z][a-z]+(-[A-Z][a-z]+)*$/,\n      \"Surname starts with a capital letter and contains at least 2 letters\"\n    ),\n  password: yup\n    .string(\"Enter your password\")\n    .min(8, \"Password should be of minimum 8 characters length\")\n    .required(\"Password is required\")\n    .matches(\n      \"([A-Za-z]+[0-9]|[0-9]+[A-Za-z])[A-Za-z0-9]*\",\n      \"Password must contain at least 8 characters, one letter, one number\"\n    ),\n  confirmPassword: yup\n    .string()\n    .required(\"Please confirm password\")\n    .oneOf(\n      [yup.ref(\"password\"), null],\n      \"The password and its confirmation do not coincide\"\n    ),\n  birthday: yup.date().required(\"Please enter your date of birth\"),\n});\n\nexport const createNoteFormValidationScema = yup.object({\n  noteTitle: yup.string(\"Enter note title\").required(\"Note title is required\"),\n  noteDescription: yup\n    .string(\"Enter note description\")\n    .required(\"Note description is required\"),\n});\n","import { apiClient } from \"api/base\";\nimport { ROUTES } from \"config/constants\";\n\nconst addNote = async ({ data }) => {\n  const result = {\n    ok: true,\n  };\n  try {\n    const response = await apiClient.post(ROUTES.notesRoute, data);\n    result.data = response.data;\n  } catch (error) {\n    result.ok = false;\n    result.error = error.response.data;\n  }\n  return result;\n};\n\nconst getNotesList = async ({ page = 1, ...params }) => {\n  const result = {\n    ok: true,\n  };\n  try {\n    const response = await apiClient.get(ROUTES.notesRoute, {\n      params: { page: page, ...params },\n    });\n    result.data = response.data;\n  } catch (error) {\n    result.ok = false;\n    result.error = error.response.data;\n  }\n  return result;\n};\n\nconst updateNote = async (data) => {\n  const result = {\n    ok: true,\n  };\n  try {\n    const uri = `${ROUTES.notesRoute}/${data.id}`;\n    await apiClient.put(uri, data);\n  } catch (error) {\n    result.ok = false;\n    result.error = error.response.data;\n  }\n  return result;\n};\n\nconst deleteNote = async ({ id }) => {\n  const result = {\n    ok: true,\n  };\n  try {\n    const uri = `${ROUTES.notesRoute}/${id}`;\n    console.log(uri, \"uri\");\n    await apiClient.delete(uri);\n  } catch (error) {\n    result.ok = false;\n    result.error = error.response.data;\n  }\n  return result;\n};\n\nconst getSharedNotesList = async () => {\n  const result = {\n    ok: true,\n  };\n  try {\n    const response = await apiClient.get(ROUTES.sharedNotesRoute);\n    result.data = response.data;\n  } catch (error) {\n    result.ok = false;\n    result.error = error.response.data;\n  }\n  return result;\n};\n\nconst shareNote = async (id, data) => {\n  const result = {\n    ok: true,\n  };\n  try {\n    const uri = `${ROUTES.sharedNotesRoute}/${id}`;\n    await apiClient.put(uri, data);\n  } catch (error) {\n    result.ok = false;\n    result.error = error.response.data;\n  }\n  return result;\n};\n\nconst notesApi = {\n  addNote,\n  getNotesList,\n  updateNote,\n  deleteNote,\n  getSharedNotesList,\n  shareNote,\n};\nexport default notesApi;\n","import { Button, Grid, IconButton, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useFormik } from \"formik\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useSnackbar } from \"notistack\";\n\nimport { createNoteFormValidationScema } from \"validations\";\nimport notesApi from \"api/notes\";\n\nconst CreateNoteHeader = () => (\n  <Box p={1} pb={2} sx={{ color: \"#0000008a\" }}>\n    <Typography variant=\"h5\" align=\"left\">\n      Add New Note\n    </Typography>\n  </Box>\n);\n\nconst CreateNoteForm = ({ onSubmit }) => {\n  const formik = useFormik({\n    initialValues: {\n      noteTitle: \"\",\n      noteDescription: \"\",\n    },\n    validationSchema: createNoteFormValidationScema,\n    onSubmit: onSubmit,\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"noteTitle\"\n          name=\"noteTitle\"\n          label=\"Note Title\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.noteTitle}\n          onChange={formik.handleChange}\n          error={formik.touched.noteTitle && Boolean(formik.errors.noteTitle)}\n          helperText={formik.touched.noteTitle && formik.errors.noteTitle}\n        />\n        <TextField\n          fullWidth\n          multiline\n          rows={8}\n          id=\"noteDescription\"\n          name=\"noteDescription\"\n          label=\"Note Description\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.noteDescription}\n          onChange={formik.handleChange}\n          error={\n            formik.touched.noteDescription &&\n            Boolean(formik.errors.noteDescription)\n          }\n          helperText={\n            formik.touched.noteDescription && formik.errors.noteDescription\n          }\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ marginRight: \"10px\" }}\n        >\n          Submit\n        </Button>\n        <Button color=\"primary\" variant=\"contained\" type=\"reset\">\n          Cancel\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst CreateNoteView = ({ onNoteAdd }) => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const onSubmit = async (values) => {\n    const newData = {\n      id: Math.floor(Math.random() * 1000),\n      title: values.noteTitle,\n      description: values.noteDescription,\n      createdAt: new Date().toUTCString(),\n    };\n    const response = await notesApi.addNote({ data: newData });\n\n    if (response.ok) {\n      onNoteAdd(newData);\n    } else {\n      enqueueSnackbar(response.error, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\",\n        },\n        variant: \"error\",\n        action: (key) => (\n          <IconButton onClick={() => closeSnackbar(key)}>\n            <CloseIcon />\n          </IconButton>\n        ),\n      });\n    }\n  };\n\n  return (\n    <Box p={2} pt={3}>\n      <Box\n        sx={{\n          backgroundColor: \"#d0d0d042\",\n          width: \"100%\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <Box\n          sx={{\n            padding: \"10px\",\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container direction=\"column\">\n              <Grid item sx={{ pb: \"30px\" }}>\n                <Box sx={{ boxShadow: \"0 4px 3px -3px #1976d2\" }}>\n                  <CreateNoteHeader />\n                </Box>\n              </Grid>\n              <Grid item>\n                <CreateNoteForm onSubmit={onSubmit} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CreateNoteView;\n","import {\n  Typography,\n  IconButton,\n  Grid,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  Button,\n  DialogActions,\n  Autocomplete,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport ModeEditIcon from \"@mui/icons-material/ModeEdit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useEffect, useState } from \"react\";\nimport { useSnackbar } from \"notistack\";\n\nimport authApi from \"api/auth\";\nimport notesApi from \"api/notes\";\n\nconst FormDialog = ({ dialogOpen, setDialogOpen, shareNotes }) => {\n  const [usersData, setUsersData] = useState([]);\n\n  const getUsers = async () => {\n    const response = await authApi.getUsersList();\n    if (response.ok) {\n      setUsersData(response.data);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const [selectedEmails, setSelectedEmails] = useState([]);\n  return (\n    <div>\n      <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\n        <DialogTitle>Share your notes</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To share your notes, please enter emails of users to share the note\n            with.\n          </DialogContentText>\n          <Autocomplete\n            multiple\n            onChange={(event, newValue) => {\n              setSelectedEmails(newValue);\n            }}\n            id=\"tags-standard\"\n            options={usersData}\n            getOptionLabel={(option) => option.email}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                placeholder=\"Email to share with\"\n              />\n            )}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDialogOpen(false)}>Cancel</Button>\n          <Button onClick={() => shareNotes(selectedEmails)}>Share</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst DisplayedNoteView = ({ note, onEditMode, onDeleteBtnClick }) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const shareNotes = async (users) => {\n    const data = {\n      emails: users.map((user) => user.email),\n    };\n    const response = await notesApi.shareNote(note.id, data);\n    if (response.ok) {\n      setDialogOpen(false);\n    } else {\n      enqueueSnackbar(response.error, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\",\n        },\n        variant: \"error\",\n        action: (key) => (\n          <IconButton onClick={() => closeSnackbar(key)}>\n            <CloseIcon />\n          </IconButton>\n        ),\n      });\n    }\n  };\n\n  return (\n    <Box p={2}>\n      <Box\n        sx={{\n          backgroundColor: \"#d0d0d042\",\n          width: \"100%\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <Box px=\"10px\">\n          <Box\n            sx={{\n              padding: \"10px\",\n              height: \"40px\",\n              boxShadow: \"0 4px 3px -3px #1976d2\",\n            }}\n          >\n            <Grid container alignContent=\"center\" justifyContent=\"flex-end\">\n              <IconButton onClick={onEditMode}>\n                <ModeEditIcon />\n              </IconButton>\n              <IconButton onClick={() => onDeleteBtnClick(note)}>\n                <DeleteIcon />\n              </IconButton>\n              <IconButton onClick={() => setDialogOpen(true)}>\n                <ShareIcon />\n              </IconButton>\n              {dialogOpen && (\n                <FormDialog\n                  dialogOpen={dialogOpen}\n                  setDialogOpen={setDialogOpen}\n                  shareNotes={shareNotes}\n                />\n              )}\n            </Grid>\n          </Box>\n        </Box>\n        <Box p={4}>\n          <Typography variant=\"h4\">{note.title}</Typography>\n          <Typography>{note.description}</Typography>\n          <Typography variant=\"caption\" sx={{ color: \"gray\" }}>\n            {new Date(note.createdAt).toDateString()}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DisplayedNoteView;\n","import { useFormik } from \"formik\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useSnackbar } from \"notistack\";\nimport { Button, Grid, IconButton, TextField, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport notesApi from \"api/notes\";\n\nconst EditNoteHeader = () => (\n  <Box p={1} pb={2} sx={{ color: \"#0000008a\" }}>\n    <Typography variant=\"h5\" align=\"left\">\n      Edit Note\n    </Typography>\n  </Box>\n);\n\nconst EditNoteForm = ({ onSubmit, note }) => {\n  const formik = useFormik({\n    initialValues: { ...note },\n    onSubmit: onSubmit,\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"title\"\n          name=\"title\"\n          label=\"Title\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.title}\n          onChange={formik.handleChange}\n          error={formik.touched.title && Boolean(formik.errors.title)}\n          helperText={formik.touched.noteTitle && formik.errors.noteTitle}\n        />\n        <TextField\n          fullWidth\n          multiline\n          id=\"description\"\n          name=\"description\"\n          label=\"Description\"\n          rows={8}\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.description}\n          onChange={formik.handleChange}\n          error={\n            formik.touched.description && Boolean(formik.errors.description)\n          }\n          helperText={formik.touched.description && formik.errors.description}\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{ marginRight: \"10px\" }}\n        >\n          Submit\n        </Button>\n        <Button color=\"primary\" variant=\"contained\" type=\"reset\">\n          Cancel\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst EditNoteView = ({ note, onNoteUpdate }) => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const onSubmit = async (values) => {\n    const updatedNote = {\n      id: note.id,\n      title: values.title,\n      description: values.description,\n      updatedAt: new Date().toUTCString(),\n      createdAt: values.createdAt,\n    };\n    const response = await notesApi.updateNote(updatedNote);\n    if (response.ok) {\n      onNoteUpdate(updatedNote);\n    } else {\n      enqueueSnackbar(response.error, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\",\n        },\n        variant: \"error\",\n        action: (key) => (\n          <IconButton onClick={() => closeSnackbar(key)}>\n            <CloseIcon />\n          </IconButton>\n        ),\n      });\n    }\n  };\n\n  return (\n    <Box p={2} pt={3}>\n      <Box\n        sx={{\n          backgroundColor: \"#d0d0d042\",\n          width: \"100%\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <Box\n          sx={{\n            padding: \"10px\",\n          }}\n        >\n          <Grid item xs={12}>\n            <Grid container direction=\"column\">\n              <Grid item sx={{ pb: \"30px\" }}>\n                <Box sx={{ boxShadow: \"0 4px 3px -3px #1976d2\" }}>\n                  <EditNoteHeader />\n                </Box>\n              </Grid>\n              <Grid item>\n                <EditNoteForm onSubmit={onSubmit} note={note} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default EditNoteView;\n","import { useEffect, useState } from \"react\";\nimport { Box, Grid, IconButton } from \"@mui/material\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useSnackbar } from \"notistack\";\n\nimport Header from \"components/Header/Header\";\nimport NotesList from \"components/NotesList/NotesList\";\nimport image from \"images/main.png\";\nimport CreateNoteView from \"components/CreateNoteView/CreateNoteView\";\nimport notesApi from \"api/notes\";\nimport DisplayedNoteView from \"components/DisplayedNoteView/DisplayedNoteView\";\nimport EditNoteView from \"components/EditNoteView/EditNoteView\";\n\nconst VIEW_TYPE = {\n  DISPLAY: \"display\",\n  CREATE: \"create\",\n  EDIT: \"edit\",\n};\n\nconst EmptyView = () => {\n  return (\n    <Grid\n      sx={{ height: \"100%\" }}\n      container\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <Box\n          component=\"img\"\n          sx={{ height: \"400px\" }}\n          src={image}\n          alt=\"main page\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst MyNotes = () => {\n  const [page, setPage] = useState(0);\n  const [hasMoreNotes, setHasMoreNotes] = useState(true);\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [viewType, setViewType] = useState(VIEW_TYPE.DISPLAY);\n  const [loadingNotes, setLoadingNotes] = useState(false);\n\n  const fetchMoreNotes = async (filterData) => {\n    let nextPage = page + 1;\n    const response = await notesApi.getNotesList({\n      page: nextPage,\n      ...filterData,\n    });\n    if (response.ok) {\n      setNotes(notes.concat(response.data));\n\n      if (response.data && Boolean(response.data.length)) {\n        setPage(nextPage);\n      } else {\n        setHasMoreNotes(false);\n      }\n    }\n  };\n\n  const getNotesOnPageLoad = async () => {\n    setLoadingNotes(true);\n    const pageOne = await notesApi.getNotesList({ page: 1 });\n    const pageTwo = await notesApi.getNotesList({ page: 2 });\n    if (pageOne.ok && pageTwo.ok) {\n      setNotes([...pageOne.data, ...pageTwo.data]);\n    }\n    setPage(2);\n    setLoadingNotes(false);\n  };\n  useEffect(() => {\n    getNotesOnPageLoad();\n  }, []);\n\n  const fetchFilteredNotes = async (filterData) => {\n    const pageOne = await notesApi.getNotesList({ page: 1, ...filterData });\n    const pageTwo = await notesApi.getNotesList({ page: 2, ...filterData });\n    if (pageOne.ok && pageTwo.ok) {\n      setNotes([...pageOne.data, ...pageTwo.data]);\n    }\n    setPage(2);\n    setHasMoreNotes(true);\n  };\n\n  const selectNote = (note) => {\n    setSelectedNote(note);\n    setViewType(VIEW_TYPE.DISPLAY);\n  };\n\n  const onNoteUpdate = (note) => {\n    const newNotes = notes.map((item) => {\n      if (item.id === note.id) {\n        return note;\n      } else {\n        return item;\n      }\n    });\n    selectNote(note);\n    setNotes(newNotes);\n  };\n\n  const onNoteAdd = (newNote) => {\n    const newNotes = [newNote, ...notes];\n    selectNote(newNote);\n    setNotes(newNotes);\n  };\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const onNoteDelete = (noteToDelete) => {\n    const newNotes = notes.filter((note) => note.id !== noteToDelete.id);\n    setNotes(newNotes);\n    selectNote(null);\n  };\n\n  const onDeleteBtnClick = async (note) => {\n    const noteToDelete = {\n      id: note.id,\n    };\n    const response = await notesApi.deleteNote(noteToDelete);\n    if (response.ok) {\n      onNoteDelete(noteToDelete);\n    } else {\n      enqueueSnackbar(response.error, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\",\n        },\n        variant: \"error\",\n        action: (key) => (\n          <IconButton onClick={() => closeSnackbar(key)}>\n            <CloseIcon />\n          </IconButton>\n        ),\n      });\n    }\n  };\n\n  const getView = () => {\n    if (viewType === VIEW_TYPE.CREATE) {\n      return <CreateNoteView onNoteAdd={onNoteAdd} />;\n    } else if (selectedNote && viewType === VIEW_TYPE.DISPLAY) {\n      return (\n        <DisplayedNoteView\n          note={selectedNote}\n          onDeleteBtnClick={onDeleteBtnClick}\n          onEditMode={() => setViewType(VIEW_TYPE.EDIT)}\n        />\n      );\n    } else if (selectedNote && viewType === VIEW_TYPE.EDIT) {\n      return <EditNoteView note={selectedNote} onNoteUpdate={onNoteUpdate} />;\n    } else {\n      return <EmptyView />;\n    }\n  };\n\n  return (\n    <Box sx={{ height: \"100vh\" }}>\n      <Header />\n      <Box sx={{ height: \"calc(100% - 64px)\" }}>\n        <Grid container spacing={1} sx={{ height: \"100%\" }}>\n          <Grid item sx={{ height: \"100%\" }}>\n            {loadingNotes ? (\n              <Box p={1} py={2} sx={{ width: \"250px\" }}>\n                <LinearProgress />\n              </Box>\n            ) : (\n              <NotesList\n                notes={notes}\n                itemProps={{\n                  onClick: selectNote,\n                }}\n                hasMoreNotes={hasMoreNotes}\n                fetchMoreNotes={fetchMoreNotes}\n                fetchFilteredNotes={fetchFilteredNotes}\n              />\n            )}\n          </Grid>\n          <Grid item sx={{ flex: \"1\" }}>\n            {getView()}\n          </Grid>\n        </Grid>\n      </Box>\n      <Fab\n        onClick={() => setViewType(VIEW_TYPE.CREATE)}\n        color=\"primary\"\n        aria-label=\"add\"\n        sx={{\n          margin: 0,\n          top: \"auto\",\n          right: 20,\n          bottom: 20,\n          left: \"auto\",\n          position: \"fixed\",\n        }}\n      >\n        <AddIcon />\n      </Fab>\n    </Box>\n  );\n};\n\nexport default MyNotes;\n","import {\n  Button,\n  IconButton,\n  Container,\n  Grid,\n  TextField,\n  Box,\n  Typography,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useSnackbar } from \"notistack\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\n\nimport { ROUTES } from \"config/constants\";\nimport { signInValidationSchema } from \"validations\";\nimport authApi from \"api/auth\";\nimport { actions } from \"store/features/userSlice\";\n\nconst SignInHeader = () => (\n  <Box pb={4} sx={{ color: \"primary.main\" }}>\n    <Typography variant=\"h3\" align=\"center\">\n      Sign In\n    </Typography>\n  </Box>\n);\n\nconst RegisterText = () => (\n  <Box p={2}>\n    <Typography align=\"center\">\n      Don't have an account yet?{\" \"}\n      <Link sx={{}} to={ROUTES.signUp}>\n        Register\n      </Link>\n    </Typography>\n  </Box>\n);\n\nconst SignInForm = ({ onSubmit }) => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: signInValidationSchema,\n    onSubmit: onSubmit,\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst SignIn = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const onSubmit = async (values) => {\n    const response = await authApi.logIn({ ...values });\n    if (response.ok) {\n      dispatch(\n        actions.login({\n          ...response.data,\n          basicAuth: authApi.getBasicAuthString({ ...values }),\n        })\n      );\n      history.push(ROUTES.myNotes);\n    } else {\n      enqueueSnackbar(response.error, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\",\n        },\n        variant: \"error\",\n        action: (key) => (\n          <IconButton onClick={() => closeSnackbar(key)}>\n            <CloseIcon />\n          </IconButton>\n        ),\n      });\n    }\n  };\n\n  return (\n    <Container maxWidth=\"xs\" disableGutters>\n      <Grid sx={{ height: \"100vh\" }} container alignItems=\"center\">\n        <Grid item xs={12}>\n          <Grid container direction=\"column\">\n            <Grid item>\n              <SignInHeader />\n            </Grid>\n            <Grid item>\n              <SignInForm onSubmit={onSubmit} />\n            </Grid>\n            <Grid item>\n              <RegisterText />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","export default __webpack_public_path__ + \"static/media/not-found.7eeca691.png\";","import { Grid } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport image from \"images/not-found.png\";\n\nconst NotFound = () => (\n  <Box>\n    <Grid\n      sx={{ height: \"100vh\" }}\n      container\n      direction=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <Box\n          component=\"img\"\n          sx={{ height: \"500px\" }}\n          src={image}\n          alt=\"not found\"\n        />\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nexport default NotFound;\n","import { List, ListItem, ListItemText, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Header from \"components/Header/Header\";\n\nconst About = () => (\n  <Box>\n    <Header />\n    <Box p={2}>\n      <Typography variant=\"h5\" component=\"div\">\n        This is a simple notes app\n      </Typography>\n      <ListItem disablePadding>\n        <ListItemText primary=\"Manage your work and tasks with this notes app. You can easily add, edit, delete and share your notes with other users. Additional features include filtering by date and by name.\" />\n      </ListItem>\n      <Typography variant=\"h5\" component=\"div\">\n        Technologies and Tools\n      </Typography>\n      <List>\n        <ListItem disablePadding>\n          <ListItemText primary=\"React\" />\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemText primary=\"Redux\" />\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemText primary=\"Material UI\" />\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemText primary=\"Material UI Icons\" />\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemText primary=\"LocalStorage\" />\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemText primary=\"React Router\" />\n        </ListItem>\n      </List>\n      <Typography variant=\"h5\" component=\"div\">\n        Features\n      </Typography>\n      <List>\n        <ListItem disablePadding>\n          <ListItemText primary=\"You can add new notes, edit and delete them\" />\n        </ListItem>\n        <ListItem disablePadding>\n          <ListItemText primary=\"You can filter notes by date and by name\" />\n        </ListItem>\n      </List>\n      <Typography variant=\"h5\" component=\"div\">\n        Planned Improvements\n      </Typography>\n      <ListItem disablePadding>\n        <ListItemText primary=\"Filtering notes by category and changing backgroung color for each of them\" />\n      </ListItem>\n    </Box>\n  </Box>\n);\n\nexport default About;\n","import {\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useSnackbar } from \"notistack\";\n\nimport { INITIAL_VALUES, ROUTES } from \"config/constants\";\nimport { signUpValidationSchema } from \"validations\";\nimport authApi from \"api/auth\";\n\nconst SignUpHeader = () => (\n  <Box pb={4} sx={{ color: \"primary.main\" }}>\n    <Typography variant=\"h3\" align=\"center\">\n      Sign Up\n    </Typography>\n  </Box>\n);\n\nconst SignUpForm = ({ onSubmit }) => {\n  const formik = useFormik({\n    initialValues: INITIAL_VALUES,\n    validationSchema: signUpValidationSchema,\n    onSubmit: onSubmit,\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"firstName\"\n          name=\"firstName\"\n          label=\"First Name\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.firstName}\n          onChange={formik.handleChange}\n          error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n          helperText={formik.touched.firstName && formik.errors.firstName}\n        />\n        <TextField\n          fullWidth\n          id=\"lastName\"\n          name=\"lastName\"\n          label=\"Last Name\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.lastName}\n          onChange={formik.handleChange}\n          error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n          helperText={formik.touched.lastName && formik.errors.lastName}\n        />\n        <TextField\n          fullWidth\n          id=\"birthday\"\n          type=\"date\"\n          name=\"birthday\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.birthday}\n          onChange={formik.handleChange}\n          error={formik.touched.birthday && Boolean(formik.errors.birthday)}\n          helperText={formik.touched.birthday && formik.errors.birthday}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <TextField\n          fullWidth\n          id=\"confirmPassword\"\n          name=\"confirmPassword\"\n          label=\"Confirm Password\"\n          type=\"password\"\n          sx={{ marginBottom: \"20px\" }}\n          value={formik.values.confirmPassword}\n          onChange={formik.handleChange}\n          error={\n            formik.touched.confirmPassword &&\n            Boolean(formik.errors.confirmPassword)\n          }\n          helperText={\n            formik.touched.confirmPassword && formik.errors.confirmPassword\n          }\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Sign Up\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst SignUp = () => {\n  const history = useHistory();\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const onSubmit = async (values) => {\n    const response = await authApi.registration({ data: values });\n\n    if (response.ok) {\n      history.push(ROUTES.signIn);\n    } else {\n      enqueueSnackbar(response.error.response.data, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\",\n        },\n        variant: \"error\",\n        action: (key) => (\n          <IconButton onClick={() => closeSnackbar(key)}>\n            <CloseIcon />\n          </IconButton>\n        ),\n      });\n    }\n  };\n  return (\n    <Container maxWidth=\"xs\" disableGutters>\n      <Grid sx={{ height: \"100vh\" }} container alignItems=\"center\">\n        <Grid item xs={12}>\n          <Grid container direction=\"column\">\n            <Grid item>\n              <SignUpHeader />\n            </Grid>\n            <Grid item>\n              <SignUpForm onSubmit={onSubmit} />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Header from \"components/Header/Header\";\n\nconst SharedNotes = () => (\n  <Box>\n    <Header />\n    <Typography variant=\"h5\" component=\"div\">\n      There will be shared notes\n    </Typography>\n  </Box>\n);\n\nexport default SharedNotes;\n","import { ThemeProvider } from \"@mui/system\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { SnackbarProvider } from \"notistack\";\n\nimport { store, persistor } from \"store\";\nimport { theme } from \"theme\";\nimport { ROUTES } from \"config/constants\";\nimport PrivateRoute from \"components/PrivateRoute/PrivateRoute\";\n\nimport MyNotes from \"pages/MyNotes/MyNotes\";\nimport SignIn from \"pages/SignIn/SignIn\";\nimport NotFound from \"pages/NotFound/NotFound\";\nimport About from \"pages/About/About\";\nimport SignUp from \"pages/SignUp/SignUp\";\nimport SharedNotes from \"pages/SharedNotes/SharedNotes\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <SnackbarProvider>\n            <Router basename={ROUTES.baseName}>\n              <Switch>\n                <Redirect exact from=\"/\" to={ROUTES.myNotes} />\n                <PrivateRoute path={ROUTES.myNotes}>\n                  <MyNotes />\n                </PrivateRoute>\n                <Route path={ROUTES.signIn} component={SignIn} />\n                <Route path={ROUTES.signUp} component={SignUp} />\n                <Route path={ROUTES.sharedNotes} component={SharedNotes} />\n                <Route path={ROUTES.about} component={About} />\n                <Route path={ROUTES.notFound} component={NotFound} />\n                <Redirect from=\"*\" to={ROUTES.notFound} />\n              </Switch>\n            </Router>\n          </SnackbarProvider>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}